name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t fressrg/trial1 .

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker Image
        run: docker push fressrg/trial1:latest

  terraform:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Initialize Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="aws_region=ap-southeast-2" \
            -var="instance_ami=ami-001f2488b35ca8aad" \
            -var="instance_type=t2.micro" \
            -var="key_name=${{ secrets.EC2_KEY_NAME }}" \
            -var="vpc_id=${{ secrets.VPC_ID }}" \
            -var="security_group_name=launch-wizard-4"

  deploy:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Pull Docker Image
        run: docker pull fressrg/trial1:latest

      - name: Upload SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ec2-key.pem
          chmod 400 ec2-key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i "ec2-key.pem" ubuntu@$(terraform output -raw public_ip) << 'EOF'
            docker run -d -p 3000:3000 --name devops-container fressrg/trial1:latest
          EOF